Given a Graph of V vertices and E edges and another edge(c - d), the task is to find if the given edge is a Bridge. i.e., removing the edge disconnects the graph.

void findconnected(vector<int>adj[],int src,int c,int d, vector<bool>& visited)
    {
        if(visited[src])
            return ;
        visited[src]=true;    
        for(auto it=adj[src].begin();it!=adj[src].end();it++)
        {
            if((src==c && *it==d)||(src==d && *it==c))
            {
                //cout<<src<<" "<<*it<<endl;
                continue;
            }
            else{
                findconnected(adj,*it,c,d,visited);
            }
            //cout<<*it<<endl;
        }
    }
    void dfs(vector<bool>& visited,vector<int>adj[],int src)
    {
        if(visited[src])
            return ;
        visited[src]=true;    
        for(auto it=adj[src].begin();it!=adj[src].end();it++)
        {
            if(!visited[*it])
            {
                dfs(visited,adj,*it);
            }
            
        }
    }
    int isBridge(int V, vector<int> adj[], int c, int d) 
    {
        vector<bool>visited(V,false);
        int count=0;
        for(int i=0;i<V;i++)
        {
            if(!visited[i])
            {
                dfs(visited,adj,i);
                count++;
            }
        }
        
        for(int i=0;i<V;i++)
        {
            visited[i]=false;
        }
        for(int i=0;i<V;i++)
        {
            if(!visited[i])
            {
                findconnected(adj,i,c,d,visited);
                count--;
            }
        }
        
        if(count<0)
        {
            return 1;
        }
        return 0;
    }

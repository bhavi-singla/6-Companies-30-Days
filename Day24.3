Course scheduleII

vector<int> findOrder(int numCourses, vector<vector<int>>& prerequisites) {
        vector<int>indegree(numCourses,0);
        vector<int>final;
        int n = prerequisites.size();
        for(int i=0;i<n;i++)
        {
            indegree[prerequisites[i][0]]++;
        }
        queue<int>q;
        for(int i=0;i<numCourses;i++)
        {
            if(indegree[i]==0)
            {
                q.push(i);
                indegree[i]--;
            }
        }
        while(!q.empty())
        {
            int m = q.size();
            //cout<<m<<endl;
            for(int i=0;i<m;i++)
            {
                int top=q.front();
                q.pop();
                cout<<top<<endl;
                final.push_back(top);
                 for(int i=0;i<n;i++)
                 {
                    if(prerequisites[i][1]==top)
                    {
                        indegree[prerequisites[i][0]]--;
                        if(indegree[prerequisites[i][0]]==0)
                        {
                            //cout<<indegree[prerequisites[i][0]]<<endl;
                            q.push(prerequisites[i][0]);
                            indegree[prerequisites[i][0]]--;
                        }    
                    }
                }
            }
        }
        if(final.size()==numCourses)
            return final;
        else{
            final.clear();
            return final;
        }
        
    }

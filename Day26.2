Stone game

int istrue(vector<int>piles,vector<vector<int>>& dp,int l,int r)
    {
        if(l>r)
        {
            return 0;
        }
        
        if(l==r)
        {
            return dp[l][r]=piles[l];
        }
        
        if(dp[l][r]!=-1)
            return dp[l][r];
        
        int left=piles[l]+min(istrue(piles,dp,l+2,r),istrue(piles,dp,l+1,r-1)) ;
        int right=piles[r]+min(istrue(piles,dp,l+1,r-1),istrue(piles,dp,l,r-2)) ;
        
        return dp[l][r]=max(left,right);
    }
    bool stoneGame(vector<int>& piles) {
        int n = piles.size();
        int sum=0;
        for(int i=0;i<n;i++)
            sum+=piles[i];
        vector<vector<int>>dp(n,vector<int>(n,-1));
        int ans = istrue(piles,dp,0,n-1);
        if(ans>sum/2)
            return true;
        return false;
    }

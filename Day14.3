Find all the unique quadruple from the given array that sums up to the given number.

vector<vector<int> > fourSum(vector<int> &s, int k) {
        // Your code goes here
        sort(s.begin(),s.end());
        vector<vector<int>>vec;
        int m=s.size();
        for(int i=0;i<m-3;i++)
        {
            for(int j=i+1;j<m-2;j++)
            {
                int l=j+1;
                int r=m-1;
                while(l<r)
                {
                    
                    if(s[i]+s[l]+s[r]+s[j]==k)
                    {
                        vec.push_back({s[i],s[j],s[l],s[r]});
                        l++;
                        r--;
                        while(l<r && s[l]==s[l-1])
                        {
                            l++;
                        }
                        while(l<r && s[r]==s[r+1])
                        {
                            r--;
                        }
                    }
                    else if(s[i]+s[l]+s[r]+s[j]<k){
                        l++;
                    }
                    else{
                        r--;
                    }
                }
                while(j<m && s[j]==s[j+1])
                {
                    j++;
                }
            }
            while(i<m && s[i]==s[i+1])
            {
                    i++;
            }
        }
        return vec;
    }
